<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--配置日志的上下文名称-->
    <contextName>${log.context.name}</contextName>
    <!-- 常量定义start -->
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="log.directory" value="/home/logs/"/>
    <!--项目名称，也是存储日志的具体目录-->
    <property name="log.context.name" value="jo-mqtt"/>
    <!--日志的字符编码-->
    <property name="log.charset" value="UTF-8"/>
    <!--历史记录最大保存天数-->
    <property name="log.maxHistory" value="30"/>
    <!--最大单个日志大小-->
    <property name="log.maxSize" value="1gb"/>
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss} [%p][%c][%M][%L]-> %m%n"/>
    <!--日志Error级别名称配置-->
    <property name="log.error.log.level" value="ERROR"/>
    <!--异步写日志的队列大小配置，默认为256-->
    <property name="log.async.queue.size" value="512"/>
    <!-- 常量定义end -->

    <!--对应spring环境变量为local的日志配置，只做控制台输出配置-->
    <!--控制台日志输出配置，可以匹配色彩和高亮-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{50}) - %yellow([%file:%line]) [%X{traceID}] - %msg%n
            </pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- 服务器上使用的appender start -->
    <!-- 默认的file appender，按天切分日志 -->
    <!-- 打印INFO以上轻量日志，被ELK收集 -->
    <appender name="ROLLING_FILE_DEFAULT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.directory}${log.context.name}/${HOSTNAME}.log</file>
        <append>true</append>
        <prudent>true</prudent>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 仅INFO以上通过 -->
            <level>INFO</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.directory}${log.context.name}/${HOSTNAME}_application.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- 错误日志，按天切分 -->
    <appender name="ROLLING_FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>${log.error.log.level}</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${log.directory}${log.context.name}/${HOSTNAME}_error.log</file>
        <!-- 日志追加配置 -->
        <append>true</append>
        <prudent>true</prudent>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.directory}${log.context.name}/${HOSTNAME}_error.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录error级别的 -->
        <encoder>
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- debug级别日志，按大小切分 -->
    <appender name="ROLLING_FILE_DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <append>true</append>
        <prudent>true</prudent>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.directory}${log.context.name}/${HOSTNAME}_debug.%d{yyyy-MM-dd}.log
            </fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <!-- 异步默认日志文件的配置 -->
    <appender name="ASYNC_ROLLING_FILE_DEBUG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <!--<discardingThreshold>0</discardingThreshold>-->
        <discardingThreshold>-1</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${log.async.queue.size}</queueSize>
        <appender-ref ref="ROLLING_FILE_DEBUG"/>
    </appender>

    <logger name="org.springframework.web" level="INFO"/>

    <root level="debug">
        <springProfile name="local">
            <appender-ref ref="STDOUT"/>
        </springProfile>

        <springProfile name="!local">
            <appender-ref ref="ASYNC_ROLLING_FILE_DEBUG"/>
            <appender-ref ref="ROLLING_FILE_DEFAULT"/>
            <appender-ref ref="ROLLING_FILE_ERROR"/>
        </springProfile>
    </root>
</configuration>